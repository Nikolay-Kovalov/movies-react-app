{"version":3,"file":"static/js/122.5026ea88.chunk.js","mappings":"6JACA,QAAuB,mBAAvB,EAAsD,wBAAtD,EAAsF,oBAAtF,EAAkH,oB,mBCAlH,QAA2B,2BAA3B,EAAsE,gC,aCCtE,MASA,EATkBA,IACd,MAAM,KAAEC,GAASD,EACjB,OACIE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,UAC5BH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAqBC,SAAEJ,KACtC,ECyBd,EA1BaK,KACT,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACZC,EAAMC,IAAYC,EAAAA,EAAAA,UAAS,IAWnC,OATAC,EAAAA,EAAAA,YAAU,KACNC,EAAAA,EAASC,iBAAiBP,GACrBQ,MAAKC,IACFC,QAAQC,IAAIF,EAAKP,MACXC,EAAQM,EAAKP,QAErB,GAER,CAACF,EAASG,KACJS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAf,SAAA,EACJH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SAAC,UAC7BH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAiBC,SAAM,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAMY,KAAIC,IACxCL,QAAQC,IAAII,EAAoB,eACzBH,EAAAA,EAAAA,MAAA,MAAAd,SAAA,CACFiB,EAAoB,cAAIpB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcmB,IAAG,mCAAAC,OAAqCF,EAAoB,cAAKG,IAAI,MAAQvB,EAAAA,EAAAA,KAACwB,EAAQ,CAACzB,KAAK,cACnJC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAYC,SAAEiB,EAAMK,QAClCR,EAAAA,EAAAA,MAAA,KAAGhB,UAAWC,EAAYC,SAAA,CAAC,MAAG,IAAAmB,OAAKF,EAAMM,UAAS,UAHtCN,EAAMK,aAKf,C,+BC5BnB,MAAME,EAAW,+BAEXC,EAAU,CACZC,cAAc,UAADP,OAFD,uNAGZQ,OAAQ,oBAmDZ,EAhDiB,CACbC,oBAAqBC,iBACjB,aAAaC,MAAM,GAADX,OAAIK,EAAQ,wBAAwB,CAACC,YAClDf,MAAKqB,IACF,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAM,wBAEhB,OAAOF,EAASG,MAAM,GAElC,EACAC,aAAc,SAAUC,GACpB,OAAON,MAAM,GAADX,OAAIK,EAAQ,wBAAAL,OAAuBiB,GAAS,CAACX,YACpDf,MAAKqB,IACF,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAM,wBAEhB,OAAOF,EAASG,MAAM,GAElC,EACAG,kBAAmB,SAAUC,GACzB,OAAOR,MAAM,GAADX,OAAIK,EAAQ,WAAAL,OAAUmB,GAAM,CAAEb,YACrCf,MAAKqB,IACF,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAM,wBAEhB,OAAOF,EAASG,MAAM,GAElC,EACAzB,iBAAkB,SAAU6B,GACxB,OAAOR,MAAM,GAADX,OAAIK,EAAQ,WAAAL,OAAUmB,EAAE,YAAY,CAAEb,YAC7Cf,MAAKqB,IACF,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAM,wBAEhB,OAAOF,EAASG,MAAM,GAElC,EACAK,kBAAmB,SAAUD,GACzB,OAAOR,MAAM,GAADX,OAAIK,EAAQ,WAAAL,OAAUmB,EAAE,YAAY,CAAEb,YAC7Cf,MAAKqB,IACF,IAAKA,EAASC,GACd,MAAM,IAAIC,MAAM,wBAEhB,OAAOF,EAASG,MAAM,GAElC,E","sources":["webpack://movies-react-app/./src/components/Cast/Cast.module.css?c9ee","webpack://movies-react-app/./src/components/Sceleton/Sceleton.module.css?6d98","components/Sceleton/Sceleton.jsx","components/Cast/Cast.jsx","services/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Cast_text__P2vgu\",\"cast_list\":\"Cast_cast_list__6yHmm\",\"image\":\"Cast_image__mOsuM\",\"title\":\"Cast_title__0cH9s\"};","// extracted by mini-css-extract-plugin\nexport default {\"sceleton\":\"Sceleton_sceleton__0ASBE\",\"sceleton_text\":\"Sceleton_sceleton_text__fDRQ3\"};","import styles from \"./Sceleton.module.css\";\n\nconst Sceleton = (props) => {\n    const { text } = props;\n    return (\n        <div className={styles.sceleton}>\n            <span className={styles.sceleton_text}>{text}</span>\n        </div>\n    )\n}\n\nexport default Sceleton;","import { useParams } from \"react-router-dom\";\nimport styles from \"./Cast.module.css\";\nimport { useEffect, useState } from \"react\";\nimport fetchApi from \"../../services/fetchApi\";\nimport Sceleton from \"../Sceleton/Sceleton\";\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [ cast, setCast ] = useState([]);\n\n    useEffect(() => {\n        fetchApi.fetchMovieActors(movieId)\n            .then(data => {\n                console.log(data.cast)\n              return  setCast(data.cast)\n                // setCast(data.cast)\n            }) \n    \n    },[movieId, setCast])\n    return (<>\n        <h1 className={styles.title}>Cast</h1>\n        <ul className={styles.cast_list}>{cast?.map(actor => {\n            console.log(actor['profile_path'])\n            return <li key={actor.name}>\n                {actor['profile_path'] ? <img className={styles.image} src={`https://image.tmdb.org/t/p/w500/${actor['profile_path']}`} alt=\"\" /> : <Sceleton text=\"No photo\"/>}\n                <p className={styles.text}>{actor.name}</p>\n                <p className={styles.text}>as {`\"${actor.character}\"`}</p>\n            </li >\n        })}</ul></>\n    )\n}\n\nexport default Cast;","const BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MjM0ZGIxMWMxNjIwMTE1OTBkMTRhMzA4MDg0OGVkNiIsInN1YiI6IjYzYTNmZDQ0OTNkYjkyMDBmNDkxMGI0NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LY_G36csxfyqSH7UhTlCGcx28IJPAx126r45DdOJrQ0\";\nconst headers = {\n    Authorization: `Bearer ${API_KEY}`,\n    accept: 'application/json'\n}\n\nconst fetchApi = {\n    fetchTrandingMovies: async function () {\n        return await fetch(`${BASE_URL}/trending/movie/week`, {headers})\n            .then(response => {\n                if (!response.ok) {\n                throw new Error('Something went wrong')\n                }\n                return response.json();\n        })\n    },\n    searchMovies: function (movie) {\n        return fetch(`${BASE_URL}/search/movie?query=${movie}`, {headers})\n            .then(response => {\n                if (!response.ok) {\n                throw new Error(\"Something went wrong\")\n                }\n                return response.json();\n        })\n    },\n    fetchMovieDetails: function (id) {\n        return fetch(`${BASE_URL}/movie/${id}`, { headers })\n            .then(response => {\n                if (!response.ok) {\n                throw new Error('Something went wrong')\n                }\n                return response.json();\n        })\n    },\n    fetchMovieActors: function (id) {\n        return fetch(`${BASE_URL}/movie/${id}/credits`, { headers })\n            .then(response => {\n                if (!response.ok) {\n                throw new Error(\"Something went wrong\")\n                }\n                return response.json();\n        } )\n    },\n    fetchMovieReviews: function (id) {\n        return fetch(`${BASE_URL}/movie/${id}/reviews`, { headers })\n            .then(response => {\n                if (!response.ok) {\n                throw new Error(\"Something went wrong\")\n                }\n                return response.json();\n        })\n    }\n}\n\nexport default fetchApi;\n\n"],"names":["props","text","_jsx","className","styles","children","Cast","movieId","useParams","cast","setCast","useState","useEffect","fetchApi","fetchMovieActors","then","data","console","log","_jsxs","_Fragment","map","actor","src","concat","alt","Sceleton","name","character","BASE_URL","headers","Authorization","accept","fetchTrandingMovies","async","fetch","response","ok","Error","json","searchMovies","movie","fetchMovieDetails","id","fetchMovieReviews"],"sourceRoot":""}